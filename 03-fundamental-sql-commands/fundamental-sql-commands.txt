1. List the commands for adding, updating, and deleting data.

Adding data: INSERT INTO
Update data: UPDATE
Deleting data: DELETE

2. Explain the structure for each type of command.

Adding data: INSERT INTO

INSERT INTO <table name> (<column names>)
VALUES
(entry 1),
(entry 2),
(entry 3)

For adding data, you specify the table name you are adding data to and which columns of data you are providing. Then you pass in one row of data for each entry.

Update data: UPDATE

UPDATE <table name> SET <column name> = <new value> WHERE <criteria for which entries to update>;

For updating data, you specify the table name, provide what fields/columns and what value to set them to and then use the WHERE clause to filter on the data you want to update.

DELETE FROM <table name> WHERE <criteria for which entries to delete>;

For deleting data, you specify the table name, and provide a criteria or multiple criteria on which rows to delete.

3. What are some data types that can be used in tables? Give a real world example of each?

Data type: text, Example: Movie names
Data type: integer, Example: Age
Data type: time, Example: Movie showings

4. Think through how to create a new table to hold a list of people invited to a wedding. This table needs to have first and last name, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

Which data type would you use to store each of the following pieces of information?

First and last name. - text
Whether they sent in their RSVP. - boolean
Number of guests. - integer
Number of meals. - integer

Write a command that makes the table to track the wedding.

CREATE TABLE wedding_invitations (
    first_name text,
    last_name text,
    rsvp boolean,
    number_of_guests integer,
    number_of_meals integer
);


Using the table we just created, write a command that adds a column to track whether they were sent a thank you card.

ALTER TABLE wedding_invitations ADD COLUMN thank_you_card_sent boolean;

You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

ALTER TABLE wedding_invitations DROP COLUMN number_of_meals;


The guests are going to need a place to sit at the reception, so write a command that adds a column for table number.

ALTER TABLE wedding_invitations ADD COLUMN table_number integer;

The wedding is over and we do not need to keep this information, so write a command that deletes the wedding table from the database.

DROP TABLE wedding_invitations;

5. Write a command to make a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

CREATE TABLE library_books (
  isbn varchar(13),
  title text,
  author text,
  genre text,
  publishing_date date,
  number_of_copies integer,
  available_copies integer
);

Find three books and add their information to the table.

INSERT INTO library_books (isbn, title, author, genre, publishing_date, number_of_copies, available_copies)
  VALUES
  ('9781455586691', 'Deep Work: Rules for Focused Success in a Distracted World', 'Cal Newport', 'Business & Money', '2016-01-05', 50, 25),
  ('9780393338690', 'Liar''s Poker ', 'Michael Lewis', 'Humor & Entertainment', '2010-03-15', 100, 3 ),
  ('9780316017930', 'Outliers: The Story of Success', 'Malcolm Gladwell', 'Anthropology', '2011-06-07', 30, 28);


Someone has just checked out one of the books. Change the available copies column to 1 fewer.

UPDATE library_books SET available_copies=2 WHERE isbn='9780393338690';

Now one of the books has been added to the banned books list. Remove it from the table.

DELETE FROM library_books WHERE isbn='9780316017930' AND title = 'Outliers: The Story of Success';

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

CREATE TABLE spacecrafts (
  id integer,
  name text,
  year_launched integer,
  country_of_origin text,
  description text,
  orbiting_body text,
  in_operation boolean,
  miles_from_Earth integer
);

Add 3 non-Earth-orbiting satellites to the table.

INSERT INTO spacecrafts (id, name, year_launched, country_of_origin, description, orbiting_body, in_operation, miles_from_Earth)
  VALUES
(1, 'Lunar Reconnaissance Orbiter (LRO)', 2009, 'United States', 'Map the moon''s surface', 'Moon', TRUE, 250000),
(2, 'Mangalyaan', 2013, 'India', 'Develop the technologies and operations for an interplanetary mission', 'Mars', TRUE, 33900000),
(3, 'Venus Express', 2005, 'Kazakhstan', 'Long term observation of the Venusian atmosphere', 'Venus', FALSE, 0);

Remove one of the satellites from the table since it has just been crashed into the planet.

DELETE FROM spacecrafts WHERE name = 'Venus Express' AND in_operation = FALSE;

Edit another satellite because it is no longer operating and change the value to reflect that.

UPDATE spacecrafts SET in_operation = FALSE WHERE id = 2;

7. Write a command to make a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not it’s been read, and the id of the email chain it’s in. Also provide commands that perform the following operations:

CREATE TABLE emails (
  id integer,
  subject text,
  sender text,
  recipients text[],
  body text,
  timestamp timestamp,
  read boolean,
  email_chain_id integer
);

Add 3 new emails to the inbox.

INSERT INTO emails (id, subject, sender, recipients, body, timestamp, read, email_chain_id)
  VALUES
(1, 'Daily Rundown', 'youwonthelottery@yahoo.com','{lottery1@yahoo.com, lottery1@gmail.com}', 'You won the lottery! Reply with your full name and social security number to receive your prize!', TIMESTAMP '2018-03-13 05:06:00', FALSE, 1),
(2, 'News', 'news@yahoo.com','{subscribers@yahoo.com, dailynews@gmail.com, igotthenews@hotmail.com}', 'Here comes the daily news!', TIMESTAMP '2018-04-01 04:01:00', TRUE, 2),
(3, 'Hangout', 'bobthewarrior@gmail.com','{me@gmail.com, serge@gmail.com, windsor@gmail.com, piglet@gmail.com}', 'BBQ this weekend?', TIMESTAMP '2018-05-12 18:36:00', TRUE, 5);


You’ve just deleted one of the emails, so write a command to remove the row from the inbox table.

DELETE FROM emails WHERE subject = 'Daily Rundown' AND sender = 'youwonthelottery@yahoo.com';

You started reading an email but just heard a crash in another room. Mark the email as unread before investigating, so you can come back to it later.

UPDATE emails SET read = FALSE WHERE subject = 'Hangout';
